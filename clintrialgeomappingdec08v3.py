# -*- coding: utf-8 -*-
"""Copy of ClinTrialGeoMappingDec08v3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZKN8FnWQVksSj5hMQESO7gSepv7p1kSr
"""

import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt

# Load world map GeoDataFrame
world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))

# Create a sample DataFrame with event information
data = {
    'Event': ['Location 1', 'Location 2'],
    'Country': ['Australia', 'New Zealand']
}

df = pd.DataFrame(data)

# Define a dictionary mapping country names to ISO codes
iso_mapping = {
    'Australia': 'AUS',
    'New Zealand': 'NZL',

    # Add more countries as needed
}

# Add ISO country code to the events DataFrame
df['ISO'] = df['Country'].map(iso_mapping)

# Merge events DataFrame with world GeoDataFrame based on ISO codes
gdf_events = world.merge(df, left_on='iso_a3', right_on='ISO', how='left')


# Plot the events on top of the world map
gdf_events.plot(column='Event', legend=True, figsize=(15, 10))

plt.title('NCT00800436')
plt.show()

import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt

# Load world map GeoDataFrame
world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))

# Create a sample DataFrame with event information
data = {
    'Event': ['Location 1'],
    'Country': ['Austria']
}

df = pd.DataFrame(data)

# Define a dictionary mapping country names to ISO codes
iso_mapping = {
    'Austria': 'AUT',


    # Add more countries as needed
}

# Add ISO country code to the events DataFrame
df['ISO'] = df['Country'].map(iso_mapping)

# Merge events DataFrame with world GeoDataFrame based on ISO codes
gdf_events = world.merge(df, left_on='iso_a3', right_on='ISO', how='left')


# Plot the events on top of the world map
gdf_events.plot(column='Event', legend=True, figsize=(15, 10))

plt.title('NCT01928615 - LISAH')
plt.show()

import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt

# Load world map GeoDataFrame
world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))

# Create a sample DataFrame with event information
data = {
    'Event': ['L1', 'L2', 'L3', 'L4', 'L5', 'L6', 'L7', 'L8', 'L9', 'L10', 'L11', 'L12'],
    #  Canada, Denmark, France, Germany, Italy, Poland, Russia, Spain, Sweden, switzerland, Turkey, UK
    'Country': ['Canada', 'Denmark', 'France', 'Germany', 'Italy', 'Poland', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Turkey', 'UK']
}

df = pd.DataFrame(data)

# Define a dictionary mapping country names to ISO codes
iso_mapping = {

    'Canada': 'CAN',
    'Denmark': 'DNK',
    'France': 'FRA',
    'Germany': 'DEU',
    'Italy': 'ITA',
    'Poland': 'POL',
    'Russia': 'RUS',
    'Spain': 'ESP',
    'Sweden': 'SWE',
    'Switzerland': 'CHE',
    'Turkey': 'TUR',
    'UK': 'GBR',
           # Add more countries as needed
}

# Add ISO country code to the events DataFrame
df['ISO'] = df['Country'].map(iso_mapping)

# Merge events DataFrame with world GeoDataFrame based on ISO codes
gdf_events = world.merge(df, left_on='iso_a3', right_on='ISO', how='left')


# Plot the events on top of the world map
gdf_events.plot(column='Event', legend=True, figsize=(15, 10))

plt.title('NCT01401166 - PrefHER')
plt.show()